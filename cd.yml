name: Deploy Node.js to Azure VM (ZIP → Blob → VM via run-command)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]  

env:
  AZ_STORAGE_ACCOUNT: ${{ secrets.AZ_STORAGE_ACCOUNT }}
  AZ_STORAGE_CONTAINER: ${{ secrets.AZ_STORAGE_CONTAINER }}
  AZ_STORAGE_KEY: ${{ secrets.AZ_STORAGE_KEY }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_VM_NAME: ${{ secrets.AZURE_VM_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Run tests (if present)
        run: npm test --if-present

      - name: Create release.zip (exclude node_modules/git)
        run: |
          zip -r release.zip . \
            -x ".git/*" "node_modules/*" ".github/*" "*.log" "coverage/*"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-release
          path: release.zip

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload to Blob & generate 1h SAS
        id: blob
        shell: bash
        run: |
          set -euo pipefail
          BLOB_NAME="nodeapp_${GITHUB_SHA:0:7}_$(date -u +%Y%m%d%H%M%S).zip"

        
          az storage container create \
            --name "$AZ_STORAGE_CONTAINER" \
            --account-name "$AZ_STORAGE_ACCOUNT" \
            --account-key "$AZ_STORAGE_KEY" >/dev/null

    
          az storage blob upload \
            --account-name "$AZ_STORAGE_ACCOUNT" \
            --account-key "$AZ_STORAGE_KEY" \
            --container-name "$AZ_STORAGE_CONTAINER" \
            --name "$BLOB_NAME" \
            --file release.zip \
            --overwrite >/dev/null

      
          EXPIRY=$(date -u -d "+1 hour" '+%Y-%m-%dT%H:%MZ')
          SAS=$(az storage blob generate-sas \
            --account-name "$AZ_STORAGE_ACCOUNT" \
            --account-key "$AZ_STORAGE_KEY" \
            --container-name "$AZ_STORAGE_CONTAINER" \
            --name "$BLOB_NAME" \
            --permissions r \
            --expiry "$EXPIRY" -o tsv)

          echo "sas_url=https://${AZ_STORAGE_ACCOUNT}.blob.core.windows.net/${AZ_STORAGE_CONTAINER}/${BLOB_NAME}?${SAS}" >> $GITHUB_OUTPUT

      - name: Create deploy.sh (runs on the VM)
        shell: bash
        run: |
          cat > deploy.sh <<'SCRIPT'
          #!/usr/bin/env bash
          set -euo pipefail

          : "${PACKAGE_SAS_URL:?Missing PACKAGE_SAS_URL}"
          APP_NAME="${APP_NAME:-myapp}"
          APP_PORT="${APP_PORT:-3000}"

        
          sudo apt-get update -y
          sudo apt-get install -y curl unzip
          if ! command -v node >/dev/null || ! node -v | grep -qE '^v22\.'; then
            curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi
          sudo npm i -g pm2

        
          APP_DIR=/opt/myapp
          REL_DIR="$APP_DIR/releases"
          CURR_LINK="$APP_DIR/current"
          TS=$(date -u +%Y%m%d%H%M%S)
          sudo mkdir -p "$REL_DIR"
          cd "$REL_DIR"

        
          ZIP="release_${TS}.zip"
          echo "Downloading package..."
          curl -fL "$PACKAGE_SAS_URL" -o "$ZIP"
          DEST="rel_$TS"
          sudo mkdir -p "$DEST"
          sudo unzip -q "$ZIP" -d "$DEST"
          sudo rm -f "$CURR_LINK"
          sudo ln -s "$REL_DIR/$DEST" "$CURR_LINK"

          cd "$CURR_LINK"
          npm ci --omit=dev

        
          export PORT="$APP_PORT"
          pm2 delete "$APP_NAME" >/dev/null 2>&1 || true
          pm2 start npm --name "$APP_NAME" -- start
          pm2 save
          pm2 startup systemd -u $(whoami) --hp $HOME || true

          echo "Deployed. PM2 list:"
          pm2 ls
          SCRIPT
          chmod +x deploy.sh

      - name: Run script on VM (SSH-less via RunCommand)
        shell: bash
        env:
          PACKAGE_SAS_URL: ${{ steps.blob.outputs.sas_url }}
        run: |
          az vm run-command invoke \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_VM_NAME" \
            --command-id RunShellScript \
            --scripts @deploy.sh \
            --parameters "PACKAGE_SAS_URL=$PACKAGE_SAS_URL" "APP_NAME=myapp" "APP_PORT=3000"

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
